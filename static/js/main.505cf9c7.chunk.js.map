{"version":3,"sources":["components/Form/FormEditor.module.css","components/ContactList/ContactList.module.css","components/Filter/Filter.module.css","components/ContactList/ContactList.js","components/Form/FormEditor.js","components/Filter/Filter.js","App.js","index.js"],"names":["module","exports","ContactList","contacts","onDeleteContacts","className","s","wrapper","list","map","id","name","number","item","text","type","btn","onClick","FormEditor","state","handleChange","e","setState","currentTarget","value","handleSubmit","preventDefault","props","onSubmit","this","form","title","htmlFor","pattern","required","onChange","input","addContact","Component","Filter","label","App","initialContacts","filter","contact","uuidv4","verifyNewContact","prevState","newName","verify","forEach","toLowerCase","alert","deleteContact","contactId","changeFilter","getVisibleContact","nomalizedFilter","includes","visibleContact","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.505cf9c7.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"FormEditor_title__1ceVD\",\"form\":\"FormEditor_form__dndIR\",\"btn\":\"FormEditor_btn__2P2Vp\",\"input\":\"FormEditor_input__1Q4g4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__260WE\",\"item\":\"ContactList_item__2V1Dr\",\"btn\":\"ContactList_btn__2rClK\",\"text\":\"ContactList_text__oK7lY\",\"title\":\"ContactList_title__2TPUY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Filter_input__1fzxj\",\"label\":\"Filter_label__3mKYi\"};","import React from 'react';\r\nimport s from './ContactList.module.css';\r\nimport PropTypes from 'prop-types';\r\nconst ContactList = ({ contacts, onDeleteContacts }) => {\r\n  return (\r\n    <div className={s.wrapper}>\r\n      <ul className={s.list}>\r\n        {contacts.map(({ id, name, number }) => (\r\n          <li key={id} className={s.item}>\r\n            <p className={s.text}>\r\n              {name}: {number}\r\n            </p>\r\n            <button\r\n              type=\"button\"\r\n              className={s.btn}\r\n              onClick={() => onDeleteContacts(id)}\r\n            >\r\n              Delete\r\n            </button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\nContactList.propTypes = {\r\n  contacts: PropTypes.array.isRequired,\r\n  onDeleteContacts: PropTypes.func.isRequired,\r\n};\r\nexport default ContactList;\r\n","import { Component } from 'react';\r\nimport s from './FormEditor.module.css';\r\nclass FormEditor extends Component {\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n  };\r\n  handleChange = e => {\r\n    this.setState({ [e.currentTarget.name]: e.currentTarget.value });\r\n  };\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    this.props.onSubmit(this.state.name, this.state.number);\r\n    this.setState({ name: '', number: '' });\r\n  };\r\n  render() {\r\n    return (\r\n      <form onSubmit={this.handleSubmit} className={s.form}>\r\n        <label className={s.title} htmlFor=\"user-name\">\r\n          Name\r\n        </label>\r\n        <input\r\n          type=\"text\"\r\n          name=\"name\"\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n          required\r\n          onChange={this.handleChange}\r\n          value={this.state.name}\r\n          id=\"user-name\"\r\n          className={s.input}\r\n        />\r\n\r\n        <label className={s.title} htmlFor=\"user-number\">\r\n          Number\r\n        </label>\r\n        <input\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n          required\r\n          onChange={this.handleChange}\r\n          value={this.state.number}\r\n          id=\"user-number\"\r\n          className={s.input}\r\n        />\r\n\r\n        <button type=\"submit\" onClick={this.addContact} className={s.btn}>\r\n          Add Contact\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\nexport default FormEditor;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport s from './Filter.module.css';\r\nconst Filter = ({ value, onChange }) => (\r\n  <label className={s.label}>\r\n    Фильтр по имени\r\n    <input type=\"text\" value={value} onChange={onChange} className={s.input} />\r\n  </label>\r\n);\r\nFilter.propTypes = {\r\n  value: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\nexport default Filter;\r\n","import { Component } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport './App.css';\nimport ContactList from './components/ContactList/ContactList';\nimport initialContacts from './components/ContactList/contacts.json';\nimport FormEditor from 'components/Form/FormEditor';\nimport Filter from 'components/Filter/Filter';\nclass App extends Component {\n  state = {\n    contacts: initialContacts,\n    filter: '',\n  };\n  addContact = (name, number) => {\n    const contact = {\n      id: uuidv4(),\n      name,\n      number,\n    };\n    if (this.verifyNewContact(name, number)) {\n      this.setState(prevState => ({\n        contacts: [contact, ...prevState.contacts],\n      }));\n    }\n  };\n  verifyNewContact = newName => {\n    let verify = true;\n\n    this.state.contacts.forEach(({ name }) => {\n      if (name.toLowerCase() === newName.toLowerCase()) {\n        alert(`${name} is already in contacts`);\n        verify = false;\n      }\n    });\n    return verify;\n  };\n  deleteContact = contactId => {\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(contact => contact.id !== contactId),\n    }));\n  };\n  changeFilter = e => {\n    this.setState({ filter: e.currentTarget.value });\n  };\n  getVisibleContact = () => {\n    const { contacts, filter } = this.state;\n    const nomalizedFilter = filter.toLowerCase();\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(nomalizedFilter),\n    );\n  };\n  render() {\n    const { filter } = this.state;\n    const visibleContact = this.getVisibleContact();\n    return (\n      <div className=\"wrapper\">\n        <h2 className=\"title\">Phonebook</h2>\n        <FormEditor onSubmit={this.addContact} />\n        <h2 className=\"title\">Contacts</h2>\n        <Filter onChange={this.changeFilter} value={filter} />\n        <ContactList\n          contacts={visibleContact}\n          onDeleteContacts={this.deleteContact}\n        />\n      </div>\n    );\n  }\n}\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}